substitutions:
  device_name: espmmw

esphome:
  name: ${device_name}
  includes:
    - XRA2413MT.h
  platformio_options:
    board_build.extra_flags:
      - "-include \"/config/fix_api_remote_transmitter.h\""

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

logger:

api:
  encryption: 
    key: !secret api_encryption_key
  services:
    - service: send_raw_command
      variables:
        command: int[]
      then:
        - delay: 1s
        - remote_transmitter.transmit_raw:
            code: !lambda 'return command;'
            carrier_frequency: 38kHz

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: on

web_server:
  port: 80

uart:
  id: uart_bus
  rx_pin: 5
  tx_pin: 6
  baud_rate: 256000
  data_bits: 8
  stop_bits: 1

globals:
  - id: uart_delay
    type: int
    restore_value: true
    initial_value: "100"
  - id: start
    type: std::vector<unsigned char>
    restore_value: false
    initial_value: "{0xFD, 0xFC, 0xFB, 0xFA, 0x04, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x04, 0x03, 0x02, 0x01}"
  - id: end
    type: std::vector<unsigned char>
    restore_value: false
    initial_value: "{0xFD, 0xFC, 0xFB, 0xFA, 0x02, 0x00, 0xFE, 0x00, 0x04, 0x03, 0x02, 0x01}"
  - id: conf
    type: std::vector<unsigned char>
    restore_value: false
    initial_value: "{0xFD, 0xFC, 0xFB, 0xFA, 0x02, 0x00, 0x61, 0x00, 0x04, 0x03, 0x02, 0x01}"
  - id: defaut_distance
    type: std::vector<unsigned char>
    restore_value: false
    initial_value: "{0xFD, 0xFC, 0xFB, 0xFA, 0x14, 0x00, 0x60, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01}"
  - id: defaut_sensitivity
    type: std::vector<unsigned char>
    restore_value: false
    initial_value: "{0xFD, 0xFC, 0xFB, 0xFA, 0x14, 0x00, 0x64, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x00, 0x63, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01}"
  - id: max_move_distance
    type: int
    restore_value: true
    initial_value: "0"
  - id: max_static_distance
    type: int
    restore_value: true
    initial_value: "0"
  - id: unattended_duration
    type: int
    restore_value: true
    initial_value: "0"
  - id: move_sensitivity
    type: int
    restore_value: true
    initial_value: "0"
  - id: static_sensitivity
    type: int
    restore_value: true
    initial_value: "0"

button:
  - platform: restart
    name: ${device_name}_reboot
  - platform: template
    id: ${device_name}_get_conf
    name: ${device_name}_get_conf
    on_press:
      - uart.write: !lambda return id(start);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(conf);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(end);
  - platform: template
    id: ${device_name}_reset_mmw
    name: ${device_name}_reset_mmw
    on_press:
      - uart.write: !lambda return id(start);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(defaut_distance);
      - uart.write: !lambda return id(defaut_sensitivity);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(end);

number:
  - platform: template
    id: ${device_name}_max_move_distance
    name: ${device_name}_max_move_distance
    optimistic: true
    min_value: 2
    max_value: 6
    step: 1
    unit_of_measurement: x 0.75m
    set_action:
      - globals.set:
          id: max_move_distance
          value: !lambda return x;
      - uart.write: !lambda return id(start);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return {0xFD, 0xFC, 0xFB, 0xFA, 0x14, 0x00, 0x60, 0x00, 0x00, 0x00, (unsigned char)x, 0x00, 0x00, 0x00, 0x01, 0x00, (unsigned char)id(max_static_distance), 0x00, 0x00, 0x00, 0x02, 0x00, (unsigned char)id(unattended_duration), 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01};
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(end);
  - platform: template
    id: ${device_name}_max_static_distance
    name: ${device_name}_max_static_distance
    optimistic: true
    min_value: 2
    max_value: 6
    step: 1
    unit_of_measurement: x 0.75m
    set_action:
      - globals.set:
          id: max_static_distance
          value: !lambda return x;
      - uart.write: !lambda return id(start);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return {0xFD, 0xFC, 0xFB, 0xFA, 0x14, 0x00, 0x60, 0x00, 0x00, 0x00, (unsigned char)id(max_move_distance), 0x00, 0x00, 0x00, 0x01, 0x00, (unsigned char)x, 0x00, 0x00, 0x00, 0x02, 0x00, (unsigned char)id(unattended_duration), 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01};
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(end);
  - platform: template
    id: ${device_name}_unattended_duration
    name: ${device_name}_unattended_duration
    optimistic: true
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    unit_of_measurement: s
    set_action:
      - globals.set:
          id: unattended_duration
          value: !lambda return x;
      - uart.write: !lambda return id(start);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return {0xFD, 0xFC, 0xFB, 0xFA, 0x14, 0x00, 0x60, 0x00, 0x00, 0x00, (unsigned char)id(max_move_distance), 0x00, 0x00, 0x00, 0x01, 0x00, (unsigned char)id(max_static_distance), 0x00, 0x00, 0x00, 0x02, 0x00, (unsigned char)x, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01};
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(end);
  - platform: template
    id: ${device_name}_move_sensitivity
    name: ${device_name}_move_sensitivity
    optimistic: true
    min_value: 0
    max_value: 100
    step: 1
    mode: box
    set_action:
      - globals.set:
          id: move_sensitivity
          value: !lambda return x;
      - uart.write: !lambda return id(start);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return {0xFD, 0xFC, 0xFB, 0xFA, 0x14, 0x00, 0x64, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x00, (unsigned char)x, 0x00, 0x00, 0x00, 0x02, 0x00, (unsigned char)id(static_sensitivity), 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01};
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(end);
  - platform: template
    id: ${device_name}_static_sensitivity
    name: ${device_name}_static_sensitivity
    optimistic: true
    min_value: 0
    max_value: 100
    step: 1
    mode: box
    set_action:
      - globals.set:
          id: static_sensitivity
          value: !lambda return x;
      - uart.write: !lambda return id(start);
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return {0xFD, 0xFC, 0xFB, 0xFA, 0x14, 0x00, 0x64, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x00, (unsigned char)id(move_sensitivity), 0x00, 0x00, 0x00, 0x02, 0x00, (unsigned char)x, 0x00, 0x00, 0x00, 0x04, 0x03, 0x02, 0x01};
      - delay: !lambda return id(uart_delay);
      - uart.write: !lambda return id(end);

binary_sensor:
  - platform: gpio
    pin: 4
    id: ${device_name}_mmw
    name: ${device_name}_mmw
    device_class: occupancy
  - platform: gpio
    pin:
      number: 2
      mode:
        input: true
        pullup: true
      inverted: true
    name: ${device_name}_button
    on_press:
      then:
        - button.press: ${device_name}_reset_mmw

sensor:
  - platform: uptime
    name: ${device_name}_uptime
  - platform: wifi_signal
    name: ${device_name}_signal
    update_interval: 60s
  - platform: adc
    pin: 3
    name: ${device_name}_brightness
    attenuation: 11db
    update_interval: 5s
    unit_of_measurement: "%"
    icon: mdi:brightness-6
    accuracy_decimals: 0
    filters:
      - lambda: |-
          return ( 3 - x ) / 0.03;
  - platform: internal_temperature
    id: ${device_name}_cpu_temprature 
    name: ${device_name}_cpu_temprature
  - platform: custom
    lambda: |-
      auto xra2413mt = new XRA2413MT(id(uart_bus));
      App.register_component(xra2413mt);
      return {xra2413mt->max_move_distance_sensor, 
      xra2413mt->max_static_distance_sensor,
      xra2413mt->unattended_duration_sensor,
      xra2413mt->move_sensitivity_sensor,
      xra2413mt->static_sensitivity_sensor};
    sensors:
      - name: max_move_distance_sensor
        internal: true
        on_value:
          then:
            - number.set:
                id: ${device_name}_max_move_distance
                value: !lambda return x;
      - name: max_static_distance_sensor
        internal: true
        on_value:
          then:
            - number.set:
                id: ${device_name}_max_static_distance
                value: !lambda return x;
      - name: unattended_duration_sensor
        internal: true
        on_value:
          then:
            - number.set:
                id: ${device_name}_unattended_duration
                value: !lambda return x;
      - name: move_sensitivity_sensor
        internal: true
        on_value:
          then:
            - number.set:
                id: ${device_name}_move_sensitivity
                value: !lambda return x;
      - name: static_sensitivity_sensor
        internal: true
        on_value:
          then:
            - number.set:
                id: ${device_name}_static_sensitivity
                value: !lambda return x;

text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${device_name}_ip
    mac_address:
      name: ${device_name}_mac
      
remote_transmitter:
  pin: 1
  carrier_duty_percent: 50%
